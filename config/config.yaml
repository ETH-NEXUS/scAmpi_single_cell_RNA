inputOutput:
  input_fastqs: /cluster/work/nexus/anne/tests/2021-08-26_testrun_scampi/fastqs/
  input_fastqs_adt:
  sample_map: config/sample_map.tsv
  malignant_cell_type: "Melanoma"

resources:
  # The following needs to point to the reference transcriptome that will be used by cellranger.
  reference_transcriptome: /cluster/work/nexus/utilities/databases/singlecell/10xGenomics/gene_expression_3_0_2/refdata-cellranger-GRCh38-3.0.0
  # celltype_lists gmx file containing a library of cell type classification gene lists
  celltype_lists: "required_files/melanoma/celltype_list_melanoma.gmx"
  # celltype_config to easily adapt the cell type classification step
  celltype_config: "required_files/melanoma/celltype_config_melanoma.tsv"
  # colour_config for a fixed assignment of colours to the cell types in celltype_config
  colour_config: "required_files/melanoma/colour_config_melanoma.txt"
  # gene expression of priority genes will be plotted and highlighted in per cluster gene expression (gene_exp)
  priority_genes: "required_files/melanoma/selected_genes_melanoma.txt"
  # genesets for GSVA analysis (scAmpi_basic) and geneSetEnrichment (scAmpi_clinical)
  genesets: "required_files/hallmark_pathways_example.gmt"
  # pathwayDB for clinical annotation in rule `annotate_DE_clinical_info` (scAmpi_clinical)
  pathwayDB: "required_files/hallmark_pathways_converted_example.gmt"
  # drugList for prioritizing drugs in scAmpi_clinical
  drugList: "required_files/melanoma/melanoma_drug_list.txt"
  # drugCombinations and civicDict for rule `plot_drug_prediction` (scAmpi_clinical)
  drugCombinations: "required_files/melanoma/drug_combinations_melanoma.txt"
  civicDict: "required_files/drug_synonyms_civic.txt"


# The tools in this pipeline use a broad range of resources and have been assigned to the following three categories.
# If there aren't enough resources specified it can be adapted in the tools corresponding section.
computingResources:
  lowRequirements:
    mem: 400
    time: 100
    threads: 1

  mediumRequirements:
    mem: 4000
    time: 700
    threads: 8

  highRequirements:
    mem: 10000
    time: 500
    threads: 8

tools:
  # Cellranger cannot be installed through Conda currently.
  # It needs to be installed manually & the call in both cellranger rules needs to be adapted.
  # variousParams can be set as described in the Cellranger documentation 
  cellranger_count:
    call: /cluster/work/nexus/utilities/sharedPrograms/cellranger/cellranger-6.1.1/bin/cellranger
    variousParams:
    local_cores: 8

  filter_genes_and_cells:
    # cell outlier detection based on fractionMT, disabled per default ("100")
    nmads_fractionMT: "100"
    # cell outlier detection based on number of detected genes, disabled per default ("100")
    nmads_NODG: "100"
    # minimum number of detected genes for cells
    threshold_NODG: "400"
    # maximum fraction of reads mapping to MT genes for cells. Should be adapted based on cell types and expected values.
    threshold_fractionMT: "0.5"
    # genome version for selecting only protein-coding genes
    genomeVersion: "GRCh38"
    # remove doublets detected in previous step
    remove_doublets: "TRUE"

  sctransform_preprocessing:
    # number of genes with highest residual variance used for UMAP calculation and clustering
    number_genes: "2000"
    # minimum residual variance for genes to be used  for UMAP calculation and clustering
    min_var: "1.5"
    # number of nearest neighbours for UMAP calculation
    n_nn: "30"

  celltyping:
    # minimum number of cell-type-specific genes expressed by a cell to consider cell type, default is "5"
    min_genes: "5"

  remove_atypical_cells:
    # threshold type, either "number_cells" or "percentage_cells"
    threshold_type: "percentage_cells"
    # default is "percentage_cells" and "5":
    # cells with cell type that less than 5 % of the cells in the cluster have are removed
    threshold_filter: "5"
    # absolute minimum number of cells of a cell type that will not be removed
    min_threshold: "5"

  clustering:
    phenograph:
      # number of nearest neighbours
      n_neighbours: 30
      log_normalize: false
      # minimum number of cells to form a cluster
      min_cluster_size: 20

  diff_exp_analysis:
    # minimum number of cells to be tested in DE analysis
    threshold_comparison: "20"
    # cut-off for p-value
    fdr_cut: "0.01"
    # cut-off for fold change
    fc_cut: "2"
    # minimum difference in mean expression
    mindiff2second: "1"
    # minimum number of non-malignant clusters to test DE to each malignant cluster
    minNumberNonMalignant: "2"

  gene_exp:
    # script includes filtering of genes that show non-zero expression in too few cells
    # either "number_cells" or "percentage_cells"
    type_sample: "number_cells"
    # threshold for cells with  non-zero expression to calculate mean expression for gene
    # default "0" keeps all genes
    threshold_sample: "0"

  plotting:
    # annotate with user-defined gene aliases
    use_alias: "TRUE"

  cell_percent_in_cluster:
    variousParams: "--malignant Melanoma"

  parse_filter_DE_genes:
          # parameters are
    # pvalue-threshold
    # columnName_geneNames
    # columnName_pvalues
    # columnName_diff
    # columnName_testStatistic
    # colName_nonmalMax
    # colName_nonmalMin
    # colName_maligMean
    # diffThreshold
    # diff2secondThreshold
    # optionalColumn1
    # ...
    variousParams: "0.01
                    gene_names
                    padj
                    diff
                    test_statistic
                    nonmal_max
                    nonmal_min
                    malig_mean
                    1
                    1
                    pct_nonzero"

  # annotate DE genes with clinical information
  query_dgidb:
      # column header containing gene names
      colName_genes: "gene_names"
      # minimum number of data base support to report drug-gene interaction
      minDatabaseNum: "4"

  download_clinical_trials:
    # terms of interest downloading data base
    cancerType: "cancer"

  # query clinical trials data base
  query_clinical_trials:
    call: "python /path_to_scAmpi_git/scripts/queryClinicalTrials.py "
    scratch: "3000"
    mem: "500"
    time: "200"
    threads: 8
    # white and black list to determine if study is disease-specific or not
    # comma separated lists, no spaces
    whiteList: "melanoma,solid tumor"
    blackList: ""

  # annotate DE genes with clinical information
  annotate_DE_clinical_info:
    # column header containing gene names
    variousParams: "--colName_gene gene_names"

  # query CIViC database for DE genes
  query_civic:
    # comma separated list (no spaces) of disease types of interest
    cancerType: "melanoma"
    # comma separated list (no spaces) of terms where entry will be filtered out
    blackList: ""
    # comma separated list (no spaces) of high-level disease types of interest
    highLevel: "solid tumor"
    # column header of gene names
    colName_gene: "gene_names"
    # column header of logFC
    colName_logFC: "diff"
    # can be "y" or "n", specify whether stricter CIViC evidence interpretation should be applied for term "EXPRESSION".
    # requires "pct_nonzero > 0" in DE analysis to assume "expression"
    strictExpression: "y"

  # show drug support on UMAP plot
  plot_drug_prediction:
    variousParams: "--drugPredEnd \"clinicalAnnotation.civic.txt\"
                    --name_DGIDB \"DGIDB-drugs(Score,Type)\"
                    --name_CIVIC \"CIViC_Drug_Support\""

  # perform gene set enrichment analysis on DE genes
  gene_set_enrichment:
    # column name of test statistic
    variousParams: "test_statistic"






  # aggregate all results from the clinical part of the scAmpi pipeline
  aggregate:
      # the two variables `suffix` and `result_outdir` define the end point of the clinical part of scampi.
      # suffix and result_outdir must match and correspond to the output of the last rule
      # that should be performed.
      suffix: "enrichedGeneSets"
      result_outdir: "gene_set_enrichment"
