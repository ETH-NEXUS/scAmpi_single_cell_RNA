################################################################################################
#### Setting for performing index hopping removal (eg. NovaSeq data).
# Note: before carrying out the analysis, it is critical that the design of multiplexing of 
# samples is carefully considered (this is relevant when performing index hopping removal).

# Note: in this setting, analysis is multisample instead of per-sample:
#   - It is important that sample names do not contain dots (CellRanger will crash otherwise).
#   - The internal structure of INPUTDIR is different in this case (one subfolder per sample).
################################################################################################

import os, glob, sys, datetime

# This function adapts the config object to include full path information
include: "misc_snake.py"

# input files and folders
SAMPLEMAPPING = config['inputOutput']['sample_map']
INPUTDIR = config['inputOutput']['input_fastqs']
OUTDIR = config['inputOutput']['analysis_output_dir']
TMPDIR = config['inputOutput']['analysis_temp_dir']

# Check if the uses specified the proper input and output directories
if not 'INPUTDIR' in globals():
    print('You have to specify the root directory of the fastq files!')
    sys.exit(1)
if not 'OUTDIR' in globals():
    print('You have to specify the root directory where the preprocessing results will be generated!')
    sys.exit(1)
if not 'TMPDIR' in globals():
    print('You have to specify the root directory where temporary files will be stored!')
    sys.exit(1)


# In the novaSeq framework, only the cellranger and index hopping rules are executed
CELLRANGER_NOVA_IN = INPUTDIR
CELLRANGER_NOVA_OUT = OUTDIR + 'cellranger_run_index_hopping/'

INDEX_HOPPING_OUT = OUTDIR + 'index_hopping_removed/'

# Include the rules
include: "index_hopping_rules.py"

# This rule defines which files should be created
localrules: scPreprocessing
rule scPreprocessing:
    input:
        # Cellranger novaSeq output (in preprocessing folder)
        expand(CELLRANGER_NOVA_OUT + '{sample}.features.tsv', sample = getSampleNames()),
        expand(CELLRANGER_NOVA_OUT + '{sample}.matrix.mtx', sample = getSampleNames()),
        expand(CELLRANGER_NOVA_OUT + '{sample}.barcodes.tsv', sample = getSampleNames()),
        # Symlinks to cellranger output (in sample-specific analysis folder)
        expand('{samplePath}.features.tsv', samplePath = getSampleRootPaths()),
        expand('{samplePath}.matrix.mtx', samplePath = getSampleRootPaths()),
        expand('{samplePath}.barcodes.tsv', samplePath = getSampleRootPaths()),
        expand('{samplePath}.web_summary.html', samplePath = getSampleRootPaths()),
        expand('{samplePath}.metrics_summary.csv', samplePath = getSampleRootPaths())
    output:
        OUTDIR + 'complete_sc_preprocessing.txt'
    params:
        lsfoutfile = OUTDIR + 'complete_sc_preprocessing.lsfout.log',
        lsferrfile = OUTDIR + 'complete_sc_preprocessing.lsferr.log',
        mem = '1000',
        scratch = '1000',
        time = '1'
    benchmark:
        OUTDIR + 'complete_sc_preprocessing.txt.benchmark'
    shell:
        'date > {output}'
